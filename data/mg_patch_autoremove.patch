--- mg_pythia_delphes/MG5_aMC/madgraph/interface/madevent_interface.py	2022-09-01 07:29:33.000000000 -0300
+++ mg_pythia_delphes_v2/MG5_aMC/madgraph/interface/madevent_interface.py	2022-11-19 18:52:54.830646885 -0300
@@ -5542,20 +5542,20 @@
             if os.path.isfile(file_path):
                 if 'removeHEPMC' in self.to_store:
                     os.remove(file_path)
-
-                self.update_status('Storing Pythia8 files of previous run', level='pythia', error=True)
-                if 'compressHEPMC' in self.to_store:
-                    misc.gzip(file_path,stdout=file_path)
-                    hepmc_fileformat = ".gz"
-
-                moveHEPMC_in_to_store = None
-                for to_store in self.to_store:
-                    if "moveHEPMC" in to_store:
-                        moveHEPMC_in_to_store = to_store
-
-                if not moveHEPMC_in_to_store == None:
-                    move_hepmc_path = moveHEPMC_in_to_store.split("@")[1]
-                    os.system("mv " + file_path + hepmc_fileformat + " " + move_hepmc_path)
+                else:
+                    self.update_status('Storing Pythia8 files of previous run', level='pythia', error=True)
+                    if 'compressHEPMC' in self.to_store:
+                        misc.gzip(file_path,stdout=file_path)
+                        hepmc_fileformat = ".gz"
+
+                    moveHEPMC_in_to_store = None
+                    for to_store in self.to_store:
+                        if "moveHEPMC" in to_store:
+                            moveHEPMC_in_to_store = to_store
+
+                    if not moveHEPMC_in_to_store == None:
+                        move_hepmc_path = moveHEPMC_in_to_store.split("@")[1]
+                        os.system("mv " + file_path + hepmc_fileformat + " " + move_hepmc_path)
 
         self.update_status('Done', level='pythia',makehtml=False,error=True)
         self.results.save()        
@@ -5876,7 +5876,7 @@
         logger.info("compile Source Directory")
         
         # Compile
-        for name in [ 'all']:#, '../bin/internal/combine_events']:
+        for name in ['all']:#, '../bin/internal/combine_events']:
             self.compile(arg=[name], cwd=os.path.join(self.me_dir, 'Source'))
         
         bias_name = os.path.basename(self.run_card['bias_module'])
